Pcresp is a stream processing tool which can be used to update
stream data using PCRE2 regular expressions and custom scripts.

Some examples:

  echo ABCD | pcresp '[BC]+'
     By default pcresp prints the matched strings.
     The unmatched characters are discarded by default.
     Result: BC

  echo ABCD | pcresp -s '' -p '[BC]+'
     An empty program prints nothing.
     The unmatched characters are printed because of -p.
     Result: AD

  echo ABCD | pcresp -s '/bin/echo -n [%0]' -p '[BC]+'
     The echo program prints its arguments.
     There is no newline because of the -n parameter.
     Result: A[BC]D

  echo 29 30 31 32 33 | pcresp '(\d+)(*SKIP)(?C#! /usr/bin/expr %1 %% 3 = 0 #)'
     This command prints those decimal numbers whose are divisible by 3.
     This condition is checked by 'expr number % 3 = 0'.
     The return value of expr influence the matching: zero - continue, non-zero fail.
     Result: 30 33

  SRC='
    INC=`expr $2 + 1`
    echo $1 : $INC
  '
  echo A7 BB29 | pcresp -d "$SRC" -s "/bin/bash -c %[0] my_command %1 %2" '([A-Z]+)(\d+)'
    This example shows an easy way to embed strings (usually source codes).
    The source referenced %[0] is not processed by pcresp.
    Result:
      A : 8
      BB : 30

Usage pcresp [options] pcre_pattern [file list]

  -h, --help
          Prints help and exit
  -s, --script script
          Executing this script after each successul match
  -p, --print
          Print text between matched strings
  -d, --def-string
          Define a constant string (indexed from 0, see %[idx])
  -i
          Enable caseless matching
  -m
          Both ^ and $ match newlines
  -x
          Ignore white space and # comments (extended regex)
  -u
          Enable UTF-8
  --match-max n
          Stop after n successful match (0 - unlimited)
  --newline-lf
          Set newline type to LF (linefeed) only (\n)
  --newline-cr
          Set newline type to CR (carriage return) only (\r)
  --newline-crlf
          Set newline type to CR followed by LF only (\r\n)
  --newline-anycrlf
          Set newline type to any combination of CR and LF
  --newline-any
          Set newline type to any Unicode newline sequence
  --bsr-anycrlf
          Set \R to match any combination of CR and LF
  --bsr-unicode
          Set \R to match any Unicode newline sequence

  Reads from stdin if file list is empty

Pattern format:

    Patterns must follow PCRE2 regular expression syntax
    Scripts can be executed during matching using (?C) callouts

Script format:

  path_to_executable argument1 argument2 ...

  arguments can be enclosed in <> bracket

  if script starts with ! the output is discarded

Special character sequences for scripts:
  %idx    - string value of capture block idx (0-65535)
  %{idx}  - string value of capture block idx (0-65535)
  %[idx]  - insert string (0-65535)
  %M      - current MARK value
  %%      - % (percent) sign
  %<      - less-than sign character
  %>      - greater-than sign character
